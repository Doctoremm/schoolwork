global proc RandMove(string $dup, string $xMinName, string $yMinName, string $zMinName, string $xMaxName, string $yMaxName, string $zMaxName)
{
    string $things[] = `ls -selection`;
   
    int $randNum =  `GetIntFieldGrpValue ($dup)`; //rand (1, 50);
    
    float $xMinRand = `GetFloatFieldValue ($xMinName)`;
    float $yMinRand = `GetFloatFieldValue ($yMinName)`;
    float $zMinRand = `GetFloatFieldValue ($zMinName)`;

    float $xMaxRand = `GetFloatFieldValue ($xMaxName)`;
    float $yMaxRand = `GetFloatFieldValue ($yMaxName)`;
    float $zMaxRand = `GetFloatFieldValue ($zMaxName)`;

    float $xMove;
    float $yMove;
    float $zMove;
    
    for ($i=0; $i<$randNum; $i++){
              
        duplicate -rr $things;
        
        $yMove = rand ($yMinRand, $yMaxRand);
        $xMove = rand ($xMinRand, $xMaxRand);
        $zMove = rand ($zMinRand, $zMaxRand);        
        for ($object in $things){
        
            move -r $xMove $yMove $zMove $object;
        }
    }  
}




/*global proc string[] Objects() {
    string $objects[];
    polyCube -w 1 -h 1 -d 1 -sx 1 -sy 1 -sz 1 -ax 0 1 0 -cuv 4 -ch 1;
    string $sels[] = `ls -selection`;
    $objects[0] = $sels[0];
    
    polySphere -r 1 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1;
    $sels = `ls -selection`;
    $objects[1] = $sels[0];
    
    return $objects;
}

global proc RandDup() {
    string $obj[] = `ls -selection`;
    int $randNum = rand (1, 50);
    for ($i=0; $i<$randNum; $i++){
              
        duplicate -rr $obj;
        
    }    
}
*/
